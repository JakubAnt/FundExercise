<Window x:Class="Exercise.UI.FundWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:dummies="clr-namespace:Exercise.UI.DataExamples"
        xmlns:contract="clr-namespace:Exercise.UI.Model.Contract"
        mc:Ignorable="d"
        Height="870" Width="910"
        Title="Fund" d:DataContext="{d:DesignInstance {x:Type dummies:FundViewModelDummy}, IsDesignTimeCreatable=True }">
    <Window.Resources>
        <ObjectDataProvider x:Key="StockTypes" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="contract:StockType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <StackPanel Orientation="Vertical">
        <StackPanel Orientation="Horizontal">
            <StackPanel.Resources>
                <Style TargetType="Label">
                    <Setter Property="Margin" Value="8,4,0,4" />
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="8,4,0,4" />
                    <Setter Property="MinWidth" Value="50" />
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="0,4,0,4" />
                    <Setter Property="MinWidth" Value="100" />
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Margin" Value="0,4,0,4" />
                    <Setter Property="MinWidth" Value="100" />
                </Style>
            </StackPanel.Resources>
            <Label  Target="{Binding ElementName=StockTypeInput}">New stock</Label>
            <ComboBox Name="StockTypeInput" ItemsSource="{Binding Source={StaticResource StockTypes}, Mode=OneTime}" SelectedItem ="{Binding Path=StockToAdd.StockType, Mode=TwoWay}"/>
            <Label Target="{Binding ElementName=PriceInput}">Price:</Label>
            <TextBox Name="PriceInput" Text="{Binding Path=StockToAdd.Price, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }"/>
            <Label Target="{Binding ElementName=QuantityInput}">Quantity:</Label>
            <TextBox Name="QuantityInput" Text="{Binding Path=StockToAdd.Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Button Command="{Binding Path=AddStock }" CommandParameter="{Binding}">Add</Button>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
            <Grid MaxHeight="800">
               <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="38*"/>
                    <ColumnDefinition Width="453*"/>
                </Grid.ColumnDefinitions>
                <DataGrid Name="dgStocks" ItemsSource="{Binding Path=Fund.Stocks}" AutoGenerateColumns="False" Grid.ColumnSpan="2" Margin="0,0,0.2,0" CanUserAddRows="False" >
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsInTolerance, Mode=OneWay}" Value="False">
                                    <Setter Property="Background" Value="LightPink"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Stock Type"  IsReadOnly="True" Binding="{Binding Path=StockType}"/>
                        <DataGridTextColumn Header="Stock Name" IsReadOnly="True" Binding="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Price" IsReadOnly="True" Binding="{Binding Path=Price, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}"/>
                        <DataGridTextColumn Header="Quantity" IsReadOnly="True" Binding="{Binding Path=Quantity, UpdateSourceTrigger=PropertyChanged, StringFormat=N0}"/>
                        <DataGridTextColumn Header="Market Value" IsReadOnly="True" Binding="{Binding Path=MarektValue}"/>
                        <DataGridTextColumn Header="Transaction Cost" IsReadOnly="True" Binding="{Binding Path=TransactionCost, StringFormat=N2}"/>
                        <DataGridTextColumn Header="Stock Weight" IsReadOnly="True" Binding="{Binding Path=StockWeight, StringFormat=P}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <Grid>
                <DataGrid Name="dgSummaries" ItemsSource="{Binding Path=Fund.Summaries}" AutoGenerateColumns="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Stock Type" Binding="{Binding Path=Name}"/>
                        <DataGridTextColumn Header="Total Number" IsReadOnly="True" Binding="{Binding Path=TotalNumber}"/>
                        <DataGridTextColumn Header="Total Marekt Value" IsReadOnly="True" Binding="{Binding Path=TotalMarektValue, StringFormat=N2}"/>
                        <DataGridTextColumn Header="Total Stock Weight" IsReadOnly="True" Binding="{Binding Path=TotalStockWeight, StringFormat=P}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </StackPanel>
    </StackPanel>
</Window>
